---
import "@fontsource/inter";
import "@fontsource/space-grotesk";
import "@fontsource/dm-sans";
import "@fontsource/fira-code";
import "../styles/global.scss";

interface Props {
	title: string;
	description?: string;
	image?: string;
}

const {
	title,
	description = "Nathan Schmidt - Fullstack Developer Portfolio. Specializing in modern web development with React, Node.js, and .NET technologies.",
	image = "/og-image.png",
} = Astro.props;

// Base URL for canonical links
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Structured data for better SEO
const structuredData = {
	"@context": "https://schema.org",
	"@type": "Person",
	name: "Nathan Schmidt",
	url: canonicalURL.toString(),
	sameAs: [
		"https://github.com/schmay33",
		"https://www.linkedin.com/in/nathan-w-schmidt/",
	],
	jobTitle: "Fullstack Developer",
	worksFor: {
		"@type": "Organization",
		name: "Freelance",
	},
	description: description,
};
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<link rel="canonical" href={canonicalURL} />
		<meta name="author" content="Nathan Schmidt" />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={canonicalURL} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={new URL(image, canonicalURL)} />

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonicalURL} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={new URL(image, canonicalURL)} />

		<!-- Structured Data -->
		<script
			type="application/ld+json"
			set:html={JSON.stringify(structuredData)}
		/>

		<!-- Theme Script -->
		<script is:inline>
			const theme = (() => {
				if (
					typeof localStorage !== "undefined" &&
					localStorage.getItem("theme")
				) {
					const savedTheme = localStorage.getItem("theme");
					// If the saved theme is 'system', check system preference
					if (savedTheme === "system") {
						return window.matchMedia("(prefers-color-scheme: dark)")
							.matches
							? "dark"
							: "light";
					}
					return savedTheme;
				}
				// Default to system preference
				if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
					return "dark";
				}
				return "light";
			})();

			if (theme === "light") {
				document.documentElement.classList.remove("dark");
			} else {
				document.documentElement.classList.add("dark");
			}
		</script>
	</head>
	<body>
		<div class="noise"></div>
		<div class="gradient-bg"></div>
		<slot />
	</body>
</html>

<style lang="scss" is:global>
	:root {
		/* Light Theme Colors */
		--color-primary: #1a237e;
		--color-primary-rgb: 26, 35, 126;
		--color-accent: #00bcd4;
		--color-accent-rgb: 0, 188, 212;
		--color-background: #f5f5f7;
		--color-text: #121212;

		/* Dark Theme Colors */
		--color-primary-dark: #4fc3f7;
		--color-primary-dark-rgb: 79, 195, 247;
		--color-accent-dark: #9575cd;
		--color-accent-dark-rgb: 149, 117, 205;
		--color-background-dark: #121212;
		--color-text-dark: #f5f5f7;

		/* Typography */
		--font-heading: "Space Grotesk", sans-serif;
		--font-body: "DM Sans", sans-serif;
		--font-code: "Fira Code", monospace;

		/* Shadows */
		--shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.05);
		--shadow-md: 0 4px 6px rgba(0, 0, 0, 0.1);
		--shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);

		/* Transitions */
		--transition-base: all 0.3s ease;
		--transition-smooth: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
	}

	html {
		font-family: var(--font-body);
		scroll-behavior: smooth;
		background-color: var(--color-background-dark);
		color: var(--color-text-dark);
		overflow-x: hidden;
		transition:
			background-color 0.3s ease,
			color 0.3s ease;
	}

	:global(html:not(.dark)) {
		background-color: var(--color-background);
		color: var(--color-text);
	}

	body {
		margin: 0;
		padding: 0;
		min-height: 100vh;
		position: relative;
	}

	.noise {
		position: fixed;
		top: 0;
		left: 0;
		width: 100vw;
		height: 100vh;
		content: "";
		opacity: 0.05;
		z-index: 1;
		pointer-events: none;
		background: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.6' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
	}

	:global(html:not(.dark)) .noise {
		opacity: 0.03;
	}

	.gradient-bg {
		position: fixed;
		top: 0;
		left: 0;
		width: 100vw;
		height: 100vh;
		content: "";
		z-index: 0;
		pointer-events: none;
		background: radial-gradient(
				circle at 50% 0%,
				rgba(var(--color-primary-dark-rgb), 0.15),
				transparent 50%
			),
			radial-gradient(
				circle at 100% 0%,
				rgba(var(--color-accent-dark-rgb), 0.15),
				transparent 50%
			);
	}

	:global(html:not(.dark)) .gradient-bg {
		background: radial-gradient(
				circle at 50% 0%,
				rgba(var(--color-primary-rgb), 0.1),
				transparent 50%
			),
			radial-gradient(
				circle at 100% 0%,
				rgba(var(--color-accent-rgb), 0.1),
				transparent 50%
			);
	}

	main {
		position: relative;
		z-index: 2;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-family: var(--font-heading);
		margin: 0;
		line-height: 1.2;
	}

	img {
		max-width: 100%;
		height: auto;
		display: block;
	}

	a {
		color: inherit;
		text-decoration: none;
		transition: var(--transition-base);
	}

	button {
		font-family: var(--font-body);
		cursor: pointer;
	}

	::selection {
		background: var(--color-primary-dark);
		color: var(--color-background-dark);
	}

	:global(html:not(.dark)) ::selection {
		background: var(--color-primary);
		color: white;
	}
</style>
